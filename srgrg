from sentence_transformers import SentenceTransformer
from neo4j import GraphDatabase
import numpy as np

# ---- 1. Sample tweet data ----
tweets = [
    "My order was delayed and no one responded.",
    "Customer service is terrible!",
    "I love the fast shipping from Next!",
    "No response from support after 5 days.",
    "Happy with the quality of clothes.",
    "Delivery took forever, never again!"
]

# ---- 2. Generate embeddings ----
model = SentenceTransformer('all-MiniLM-L6-v2')
embeddings = model.encode(tweets)

# ---- 3. Connect to Neo4j Aura ----
NEO4J_URI = "neo4j+ssc://aac44614.databases.neo4j.io"
NEO4J_USERNAME = "neo4j"
NEO4J_PASSWORD = "DDQ_dNKBEqUR-5WZKmoOuiTT8jVzsEvDtM7Pfju4H60"

driver = GraphDatabase.driver(NEO4J_URI, auth=(NEO4J_USERNAME, NEO4J_PASSWORD))

# ---- 4. Upload tweets & embeddings ----
def upload_tweets(tx, tweets, embeddings):
    for i, (tweet, emb) in enumerate(zip(tweets, embeddings)):
        tx.run("""
        CREATE (t:Tweet {id: $id, text: $text, embedding: $embedding})
        """, id=f"tweet_{i}", text=tweet, embedding=emb.tolist())

with driver.session() as session:
    session.execute_write(upload_tweets, tweets, embeddings)

# ---- 5. Create vector index ----
with driver.session() as session:
    session.run("""
    CREATE VECTOR INDEX tweet_index FOR (t:Tweet) ON (t.embedding)
    OPTIONS {
        indexConfig: {
            `vector.dimensions`: 384,
            `vector.similarity_function`: 'cosine'
        }
    }
    """)

# ---- 6. Link similar tweets using cosine similarity ----
def link_similar_tweets(tx, embeddings):
    for i, emb in enumerate(embeddings):
        tx.run("""
        CALL db.index.vector.queryNodes('tweet_index', 3, $query_embedding)
        YIELD node, score
        WHERE node.id <> $self_id
        MERGE (a:Tweet {id: $self_id})
        MERGE (a)-[:SIMILAR_TO {score: score}]->(node)
        """, query_embedding=emb.tolist(), self_id=f"tweet_{i}")

with driver.session() as session:
    session.execute_write(link_similar_tweets, embeddings)

print("âœ… Tweets uploaded, indexed, and linked by similarity.")
